policy_module(flow, 1.100.1)

########################################
#
# Declarations
#

type flow_t;
type flow_exec_t;
init_daemon_domain(flow_t, flow_exec_t)

permissive flow_t;

type flow_initrc_exec_t;
init_script_file(flow_initrc_exec_t)

type flow_conf_t;
files_type(flow_conf_t)

type flow_var_lib_t;
files_type(flow_var_lib_t)

type flow_var_run_t;
files_type(flow_var_run_t)

type flow_port_t;
corenet_port(flow_port_t)

########################################
#
# flow local policy
#
allow flow_t self:process { fork };

allow flow_t self:fifo_file rw_fifo_file_perms;
allow flow_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(flow_t, flow_conf_t, flow_conf_t)
manage_files_pattern(flow_t, flow_conf_t, flow_conf_t)

manage_dirs_pattern(flow_t, flow_var_lib_t, flow_var_lib_t)
manage_files_pattern(flow_t, flow_var_lib_t, flow_var_lib_t)
files_var_lib_filetrans(flow_t, flow_var_lib_t, { dir file })

manage_dirs_pattern(flow_t, flow_var_run_t, flow_var_run_t)
manage_files_pattern(flow_t, flow_var_run_t, flow_var_run_t)

sysnet_dns_name_resolve(flow_t)
corenet_all_recvfrom_unlabeled(flow_t)

allow flow_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(flow_t)
corenet_tcp_sendrecv_generic_node(flow_t)
corenet_tcp_sendrecv_all_ports(flow_t)
corenet_tcp_bind_generic_node(flow_t)

gen_require(`
    type flow_port_t;
')
allow flow_t flow_port_t:tcp_socket name_bind;

gen_require(`
    type flow_port_t;
')
allow flow_t flow_port_t:tcp_socket name_connect;

domain_use_interactive_fds(flow_t)

files_read_etc_files(flow_t)

miscfiles_read_localization(flow_t)

sysnet_dns_name_resolve(flow_t)

allow flow_t flow_exec_t:file execute_no_trans;
allow flow_t self:process setsched;
corecmd_exec_ls(flow_t)
corenet_tcp_connect_http_port(flow_t)
dev_read_urand(flow_t)
fs_getattr_xattr_fs(flow_t)
kernel_read_system_state(flow_t)
