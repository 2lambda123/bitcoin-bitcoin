.TH BITCOIN-TX "1" "January 2018" "bitcoin-tx v0.16.99.0" "User Commands"
.SH NAME
bitcoin-tx \- manual page for bitcoin-tx v0.16.99.0
.SH DESCRIPTION
Bitcoin Core bitcoin\-tx utility version v0.16.99.0
.SS "Usage:"
.TP
bitcoin\-tx [options] <hex\-tx> [commands]
Update hex\-encoded bitcoin transaction
.TP
bitcoin\-tx [options] \fB\-create\fR [commands]
Create hex\-encoded bitcoin transaction
.SH OPTIONS
.IP \-?
This help message
.IP \fB\-create\fR
Create new, empty TX.
.IP \fB\-json\fR
Select JSON output
.IP \fB\-txid\fR
Output only the hex\-encoded transaction id of the resultant transaction.
.PP
Chain selection options:
.IP \fB\-regtest\fR
Enter regression test mode, which uses a special chain in which blocks
can be solved instantly. This is intended for regression testing
tools and app development.
.IP \fB\-testnet\fR
Use the test chain
.PP
Commands:
.IP delin=N
Delete input N from TX
.IP delout=N
Delete output N from TX
.IP in=TXID:VOUT(:SEQUENCE_NUMBER)
Add input to TX
.IP locktime=N
Set TX lock time to N
.IP nversion=N
Set TX version to N
.IP outaddr=VALUE:ADDRESS
Add address\-based output to TX
.IP outdata=[VALUE:]DATA
Add data\-based output to TX
.IP outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]
Add Pay To n\-of\-m Multi\-sig output to TX. n = REQUIRED, m = PUBKEYS.
Optionally add the "W" flag to produce a
pay\-to\-witness\-script\-hash output. Optionally add the "S" flag to
wrap the output in a pay\-to\-script\-hash.
.IP outpubkey=VALUE:PUBKEY[:FLAGS]
Add pay\-to\-pubkey output to TX. Optionally add the "W" flag to produce a
pay\-to\-witness\-pubkey\-hash output. Optionally add the "S" flag to
wrap the output in a pay\-to\-script\-hash.
.IP outscript=VALUE:SCRIPT[:FLAGS]
Add raw script output to TX. Optionally add the "W" flag to produce a
pay\-to\-witness\-script\-hash output. Optionally add the "S" flag to
wrap the output in a pay\-to\-script\-hash.
.IP replaceable(=N)
Set RBF opt\-in sequence number for input N (if not provided, opt\-in all
available inputs)
.IP sign=SIGHASH\-FLAGS
Add zero or more signatures to transaction. This command requires JSON
registers:prevtxs=JSON object, privatekeys=JSON object. See
signrawtransaction docs for format of sighash flags, JSON
objects.
.PP
Register Commands:
.IP load=NAME:FILENAME
Load JSON file FILENAME into register NAME
.IP set=NAME:JSON\-STRING
Set register NAME to given JSON\-STRING
.SH COPYRIGHT
Copyright (C) 2009-2018 The Bitcoin Core developers

Please contribute if you find Bitcoin Core useful. Visit
<https://bitcoincore.org> for further information about the software.
The source code is available from <https://github.com/bitcoin/bitcoin>.

This is experimental software.
Distributed under the MIT software license, see the accompanying file COPYING
or <https://opensource.org/licenses/MIT>

This product includes software developed by the OpenSSL Project for use in the
OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by
Eric Young and UPnP software written by Thomas Bernard.
